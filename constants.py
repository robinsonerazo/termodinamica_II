# -*- coding: cp1252 -*-
from scipy import array, transpose

Ru = 8.3145 # KJ/kmolK

"""
Ordem das substâncias sempre a mesma em Coef_low, Coef_high e M: CO2, H2O, N2, O2, CO, H2, H, O, OH, NO,
CH4, C7H17, C14.4H24.9, CH3OH, CH3NO2 (quando houver...).
"""

subst = ('CO2', 'H2O', 'N2', 'O2', 'CO', 'H2', 'H', 'O', 'OH', 'NO',
          'CH4', 'C7H17', 'C14.4H24.9', 'CH3OH', 'CH3NO2'  )

# Coeficientes para 300 <= T <= 1000 (K):
Coef_low = array((
[0.24007797e+01,0.87350957e-02,-0.66070878e-5,0.20021861e-8,0.63274039e-15,-0.48377527e+5,0.96951457e+1],
[0.40701275e+01,-0.11084499e-02,0.41521180e-5,-0.29637404e-8,0.80702103e-12,-0.30279722e+5,-0.32270046e+0],
[0.3674826e+01,-0.12081500e-02,0.23240102e-5,-0.63217559e-9,-0.22577253e-12,-0.10611588e+4,0.23580424e+1],
[0.36255985e+01,-0.18782184e-02,0.70554544e-5,-0.67635137e-8,0.21555993e-11,-0.10475226e+4,0.43052778e+1],    
[0.37100928e+01,-0.16190964e-02,0.36923594e-5,-0.20319674e-8,0.23953344e-12,-0.14356310e+5,0.2955535e+1], 
[0.30574451e+01,0.26765200e-02,-0.58099162e-5,0.55210391e-8,-0.18122739e-11,-0.98890474e3,-0.22997056e1],
[0.25000000e+01,0,0,0,0,0.25471627e+5,-0.46011762e+0],
[0.29464287e+01,-0.16381665e-02,0.24210316e-5,-0.16028432e-12,0.38906964e-12,0.29147644e5,0.29639949e1],
[0.38375943e+01,-0.10778858e-02,0.96830378e-6,0.18713972e-9, -0.22571094e-12,0.36412823e+4,0.49370009e+0],
[0.40459521e+01,-0.34181783e-02,0.79819190e-05,-0.61139316e-08,0.15919076e-11,0.97453934e+04,0.29974988e+1],
[1.971324,7.871586e-3,-1.048592e-6,0.,0.,-9.930422e+3,8.873728],
[4.0652,6.0977e-2,-1.8801e-5,0.,0.,-3.5880e4,1.545e1],
[7.9710,1.1954e-1,-3.6858e-5,0.,0.,-1.9385e4,-1.7879],
[1.779819,1.262503e-2,-3.62489e-6,0.,0.,-2.52542e4,1.50884e1],
[1.412633,2.087101e-2,-8.142134e-6,0.,0.,-1.026351e4,1.917126e1],
                  ))

# Coeficientes para 1000 < T <= 3000 (K):
Coef_high = array((
[0.446080e1,0.309817e-2,-0.123925e-5,0.227413e-9,-0.155259e-13,-0.489614e5,-0.986359],
[0.27167e+1,0.294513e-2,-0.802243e-6,0.102266e-9, -0.484721e-14 ,-0.299058e+5,0.663056e+1],
[0.289631e1,0.151548e-2,-0.572352e-6,0.998073e-10,-0.652235e-14,-0.905861e3,0.616151e1],
[0.362195e+1,0.736182e-3,-0.196522e-6,0.362015e-10,-0.289456e-14,-0.120198e+4,0.361509e+1],
[0.298406e1,0.148913e-2,-0.578996e-6,0.103645e-9,-0.693535e-14,-0.142452e5,0.634791e1],
[0.310019e1,0.511194e-3,0.526442e-7,-0.349099e-10,0.369453e-14,-0.877380e3,-0.196294e1],
[0.25e1,0,0,0,0,0.254716e5,-0.460117],
[0.254205e1,-0.275506e-4,-0.3102080e-8,0.455106e-11,-0.436805e-15,0.292308e5,0.492030e1],
[0.291064e1,0.959316e-3,-0.194417e-6,0.137566e-10,0.142245e-15,0.393538e4,0.544234e1],
[0.3189e01,0.133822e-2,-0.528993e-6,0.959193e-10,-0.648479e-14,0.982832e4,0.674581e1],
    ))

# Massas Moleculares
MMols=array(([44.01,18.015,28.013,31.999,28.01,2.016,1.008,16.00,17.007,30.006,
          16.043,101.21,198.04,32.04,61.04])  )	

# Coeficientes para o logaritmo decimal das 6 Constantes de Equilíbrio
Coef_K = array((
    [0.432168,0.310805,-0.141784,0.150879e-1,-0.752364,-0.415302e-2],
    [-0.112464e5,-0.129540e5,-0.213308e4,-0.470959e4,0.12421e5,0.148627e5],
    [0.267269e1,0.321779e1,0.853461,0.646096,-0.260286e1,-0.475746e1],
    [-0.745744e-4,-0.738336e-4,0.355015e-4,0.272805e-5,0.259556e-3,0.124699e-3],
    [0.242484e-8,0.344645e-8,-0.310227e-8,-0.154444e-8,-0.162687e-7,-0.900227e-8],
         ),)

Coef_K = Coef_K.transpose() # transposto para que cada linha seja um K

if __name__ == '__main__':
    print Coef_K
